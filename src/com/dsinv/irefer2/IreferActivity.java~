package com.dsinv;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;

import org.json.JSONArray;
import org.json.JSONObject;
import org.json.JSONTokener;

import com.dsinv.R;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.Dialog;
import android.app.ProgressDialog;
import android.content.DialogInterface;
import android.content.DialogInterface.OnClickListener;
import android.content.Intent;
import android.database.Cursor;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.ToggleButton;

public class IreferActivity extends Activity {
	
	private DbAdapter	dba;
	private int debug = 0;             // if(0) then all options/button at main view
	private int reg = 0;               // if(0) fresh copy; if(1) reg.requested if(2) registered
	private TextView headLabel1;
	private TextView headLabel2;
	private TextView userLabel1;
	private TextView userLabel2;
	private TextView userLabel3;
	private TextView allSearchText;

	Button regBtn;
	Button regBtn4;
	Button regBtn2;
	Button regBtn3;
	Button searchBtn;
	Button aboutBtn;
	//ToggleButton searchType = null;
	
	private String pracName    = null;
	private String pracAddress = null;
	private String userName    = null;
	private String userEmail   = null;
	private int pracId = 0;
	
	int myCntyId = 0;
	int myPracId = 0;
	int myHospId = 0;
	int userId = 0;
	int updateSetting = 0;
	private final int ACTIVATION_PAGE = 1101;
	
	CharSequence[] items = {"Never show this!"};
    boolean[] itemsChecked = new boolean[items.length];
    
    /** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);
        setTitle("iRefer");
        
        //searchType = (ToggleButton) findViewById(R.id.is_resource_button);
        
        dba = new DbAdapter(this);
        dba.open();
        
        Cursor cr0 = dba.fetchAll(dba.USERS);
        if(cr0 != null && cr0.getCount() > 0) {
        	cr0.moveToFirst();
        	userId = cr0.getInt(1);
        	myPracId = cr0.getInt(6);
        	myHospId = cr0.getInt(7);
        	myCntyId = cr0.getInt(8);
        	updateSetting = cr0.getInt(10);
			
        	/* is app is activated GOTO filter/setup page */
        	if(cr0.getString(5) != null && cr0.getString(5).length() > 0){
        		cr0.close();
        		Intent intent = new Intent(IreferActivity.this, FilterPageActivity.class);
        		if(dba.getCount(DbAdapter.DOCTOR) == 0)
        			intent = new Intent(IreferActivity.this, SetupActivity.class);
        		dba.close();
        		startActivityForResult(intent, 1001);
				finish();
        	}
        	cr0.close();
        }
        /*
        if(myHospId > 0) {
        	LinearLayout wrapper1 = (LinearLayout) findViewById(R.id.mainHeadlineWrapper);
        	Cursor cr1 = dba.fetchAll(dba.PRACTICE);
        	if(cr1 != null && cr1.getCount() > 0) {
            	cr1.moveToFirst();
            	for(int i=0; i<cr1.getCount(); i++) {
            		Button pracBtn1 = new Button(this);
                	pracBtn1.setId(1);
                	pracBtn1.setText(cr1.getString(2));
                	pracBtn1.setBackgroundResource(R.drawable.custom_button2);
                	wrapper1.addView(pracBtn1);
            	}
            	cr1.close();
        	}	
        }
        */
        regBtn = (Button) findViewById(R.id.home_button1);
        regBtn.setOnClickListener(new View.OnClickListener() {
			public void onClick(View v) {
				Intent intent = new Intent(IreferActivity.this, ItemChooseActivity.class);
				intent.putExtra("opr", DbAdapter.DOCTOR);
            	intent.putExtra("user_type", 1);
	            startActivityForResult(intent, 1002);				
			}
		});
        
        regBtn2 = (Button) findViewById(R.id.button2);
        regBtn2.setOnClickListener(new View.OnClickListener() {
			public void onClick(View v) {
				Intent intent = new Intent(IreferActivity.this, ItemChooseActivity.class);
				intent.putExtra("opr", DbAdapter.DOCTOR);
				intent.putExtra("user_type", 2);
				//intent.putExtra("opr", DbAdapter.HOSPITAL);
	            startActivityForResult(intent, 1003);
				//Intent intent = new Intent(IreferActivity.this, RegFormActivity.class);
            	//intent.putExtra("operation", 1);
	            //startActivityForResult(intent, 1100);				
			}
		});
        
        regBtn3 = (Button) findViewById(R.id.button3);
        regBtn3.setOnClickListener(new View.OnClickListener() {
			public void onClick(View v) {
				Intent intent = new Intent(IreferActivity.this, ActivationFormActivity.class);
            	//intent.putExtra("operation", 1);
	            startActivityForResult(intent, ACTIVATION_PAGE);				
			}
		});
        
        //final ToggleButton isResourceButton = (ToggleButton) findViewById(R.id.is_resource_button);
        searchBtn = (Button) findViewById(R.id.buttonSearch);
        searchBtn.setOnClickListener(new View.OnClickListener() {
			public void onClick(View v) {
				if(myHospId > 0) {
					Intent intent = new Intent(IreferActivity.this, ItemViewActivity.class);
					intent.putExtra("opr", DbAdapter.PRACTICE);
//					if( isResourceButton.isChecked() )
//						intent.putExtra("doctorOrResource", 2);
//					else
						intent.putExtra("doctorOrResource", 1);		
					startActivityForResult(intent, 1004);
				} else {
					Intent intent = new Intent(IreferActivity.this, FilterPageActivity.class);
//					if( isResourceButton.isChecked() ) {
//						intent = new Intent(IreferActivity.this, ResourceFilterPageActivity.class);
//					}
					startActivityForResult(intent, 1004);
				}
            	//intent.putExtra("operation", 1);				
			}
		});

        
        regBtn4 = (Button) findViewById(R.id.home_setup_button);
        regBtn4.setOnClickListener(new View.OnClickListener() {
			public void onClick(View v) {
				/*
				Cursor cr1 = dba.fetchAll(dba.USERS);
		        if(cr1 != null && cr1.getCount() > 0) {
		        	cr1.moveToFirst();
		        	updateSetting = cr1.getInt(10);
		        	cr1.close();
		        }*/
				if(updateSetting == 0){
					Intent intent2 = new Intent(IreferActivity.this, SetupActivity.class);
	            	startActivityForResult(intent2, 1005);	
				} else {
					DialogInterface.OnClickListener dialogClickListener = new DialogInterface.OnClickListener() {
						public void onClick(DialogInterface dialog, int which) {
							switch (which){
							case DialogInterface.BUTTON_POSITIVE:
								TemplateProcessor tp = new TemplateProcessor(IreferActivity.this, dba);
								if(myPracId > 0)
									tp.updateSetupPCP(myPracId, myCntyId);
								else if(myHospId > 0)
									tp.updateSetupHospitalist(myHospId);
								dba.settingUpdate(0);
								Intent intent = new Intent(IreferActivity.this, SetupActivity.class);
								startActivityForResult(intent, 1005);	
								break;
							case DialogInterface.BUTTON_NEGATIVE:
								Intent intent2 = new Intent(IreferActivity.this, SetupActivity.class);
								startActivityForResult(intent2, 1005);	
								//No button clicked
								break;
							}
						}
					};
    			
					AlertDialog.Builder builder = new AlertDialog.Builder(IreferActivity.this);
					builder.setMessage("Setting is empty, Please download latest data from server?").setPositiveButton("Update Now", dialogClickListener)
    		        	.setNegativeButton("Later", dialogClickListener).show();
				//Intent intent = new Intent(SetupActivity.this, ActivationFormActivity.class);
            	//intent.putExtra("operation", 1);
	            //startActivityForResult(intent, 1100);				
				}
			}
		});
        
        aboutBtn = (Button) findViewById(R.id.home_about_button);
        aboutBtn.setOnClickListener(new View.OnClickListener() {
			public void onClick(View v) {
				Intent intent = new Intent(IreferActivity.this, AboutPageActivity.class);
            	startActivityForResult(intent, 1006);				
			}
		});
    }
      
    @Override
    public void onStart() {   
         super.onStart();   
        Cursor cr = dba.fetchAll(dba.USERS);
        if(cr != null && cr.getCount() > 0) {
        	cr.moveToFirst();
        	userName  = "User: "+cr.getString(3);
        	userName  = userName + " " +cr.getString(2);
        	userEmail = "Email: " +cr.getString(4);
        	myPracId = cr.getInt(6);
        	myHospId = cr.getInt(7);
        	updateSetting = cr.getInt(10);
        	if(cr.getString(5) != null && cr.getString(5).length() > 0)
        		reg = 2;
        	else
        		reg = 1;
        	cr.close();
        	//System.out.println("USER_NAME="+userName);
        }
        
        if(myPracId > 0) {
        	Cursor cr1 = dba.fetchAll(dba.PRACTICE);
        	if(cr1 != null && cr1.getCount() > 0) {
            	cr1.moveToFirst();
            	pracName     = cr1.getString(2);
            	pracAddress  = cr1.getString(3);
            	cr1.close();
            }
        } else if(myHospId > 0) {
        	Cursor cr1 = dba.fetchAll(dba.HOSPITAL);
        	if(cr1 != null && cr1.getCount() > 0) {
            	cr1.moveToFirst();
            	pracName     = cr1.getString(2);
            	pracAddress  = cr1.getString(3);
            	cr1.close();
            }
        }
        
        headLabel1= (TextView) findViewById(R.id.headLabel1);
        headLabel2= (TextView) findViewById(R.id.headLabel2);
        userLabel1= (TextView) findViewById(R.id.userLabel1);
        userLabel2= (TextView) findViewById(R.id.userLabel2);
        userLabel3= (TextView) findViewById(R.id.userLabel3);
        allSearchText = (TextView) findViewById(R.id.main_all_search_text);
        
        if(debug == 0) {
        	if(reg == 0) {
        		/* fresh copy */
        		searchBtn.setVisibility(View.GONE);
        		regBtn3.setVisibility(View.GONE);
        		regBtn4.setVisibility(View.GONE);
        		userLabel1.setVisibility(View.GONE);
        		userLabel2.setVisibility(View.GONE);
        		userLabel3.setVisibility(View.GONE);
        		//allSearchText.setVisibility(View.GONE);
        		//searchType.setVisibility(View.GONE);
        	} else if(reg == 1) {  //requested
        		searchBtn.setVisibility(View.GONE);
        		regBtn3.setVisibility(View.VISIBLE);
        		regBtn.setVisibility(View.GONE);
        		regBtn2.setVisibility(View.GONE);
        		regBtn4.setVisibility(View.GONE);
        		headLabel1.setText(pracName);
        		headLabel2.setText(pracAddress);
        		userLabel1.setText(userName);
        		userLabel2.setText(userEmail);
        		//allSearchText.setVisibility(View.GONE);
        		//searchType.setVisibility(View.GONE);
        	} else if(reg == 2) {  //registered
        		headLabel1.setText(pracName);
        		headLabel2.setText(pracAddress);
        		searchBtn.setVisibility(View.VISIBLE);
        		//allSearchText.setVisibility(View.VISIBLE);
        		regBtn.setVisibility(View.GONE);
        		regBtn2.setVisibility(View.GONE);
        		regBtn3.setVisibility(View.GONE);
        		regBtn4.setVisibility(View.VISIBLE);
        		//searchType.setVisibility(View.VISIBLE);
        		//aboutBtn.setVisibility(View.VISIBLE);
        		userLabel1.setVisibility(View.GONE);
        		userLabel2.setVisibility(View.GONE);
        		userLabel3.setVisibility(View.GONE);
        	}
        }
        
    }
	
    @Override
	public boolean onCreateOptionsMenu(Menu menu) {
	    MenuInflater inflater = getMenuInflater();
	    inflater.inflate(R.menu.home_page_menu, menu);
	    return true;
	}
	
	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
	    // Handle item selection
	    switch (item.getItemId()) {
	    case R.id.home_menu_already_registered:
	    	Intent intent = new Intent(IreferActivity.this, ActivationFormActivity.class);
            startActivityForResult(intent, ACTIVATION_PAGE);	
	        return true;
	    default:
	        return super.onOptionsItemSelected(item);
	    }
	}
    
	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
	    super.onActivityResult(requestCode, resultCode, data);
	    //System.out.println("SMM::REQ::"+requestCode+"::RES::"+resultCode);
	    if(requestCode == ACTIVATION_PAGE && resultCode == RESULT_OK){
	    	Intent intent = new Intent(IreferActivity.this, SetupActivity.class);
	    	startActivityForResult(intent, 1004);
	    	finish();
	    }
	}
	public String getDataFromURL(String urlStr) throws Exception {
		//System.out.println("SMM::GOING-ONLINE::"+urlStr);
		URL url = new URL(urlStr);
	    URLConnection urlCon = url.openConnection();
	    BufferedReader in = new BufferedReader(
	                            new InputStreamReader(
	                            urlCon.getInputStream()));
	    String data = "";
	    String line = "";
	    
        while ((line = in.readLine()) != null)
        	data += line;
            //System.out.println(inputLine);
	    in.close();
	    return data;
    }
}